@page "/fetchdata"
@using System.Text.Json
@using System.Text.Json.Serialization


@inject IProductService productService
@inject IJSRuntime JSRuntime

<PageTitle>Products List</PageTitle>

<h1>Products List</h1>

<p>This component demonstrates fetching data from a API.</p>

@if (_categoriesList == null)
{
    <p>Loading...</p>
}
else
{
    <ul class="list-group list-unstyled">
        @foreach(Category category in _categoriesList)
        {
            <div class="list-group-item">
                <li class="mb-1">
                    <button class="btn rounded collapsed" data-bs-toggle="collapse"
                            data-bs-target="#@(category.Name+"-collapse")"
                            @onclick="(()=>OnCategoryLabelClick(category.Name))">
                        @category.Name
                    </button>
                    <div class="collapse" id="@(category.Name+"-collapse")">
                        <ul class="list-group">
                            <li class="list-group-item">1</li>
                            <li class="list-group-item">2</li>
                            <li class="list-group-item">3</li>
                        </ul>
                    </div>
                </li>
            </div>
        }


    </ul>
}

@code {

    private List<Category> _categoriesList = null!;

    private Category _category = new Category();


    protected override async Task OnInitializedAsync()
    {
        _categoriesList = await productService.GetCategories();
    }

    protected async Task LoadCategoryList()
    {
        _categoriesList = await productService.GetCategories();
        StateHasChanged();
    }

    protected async void OnCategoryLabelClick(string categoryName)
    {
        await JSRuntime.InvokeVoidAsync("ChangeVisibility", categoryName + "-collapse");
        StateHasChanged();
    }

}